main:
  steps:
  - init:
      assign:
      - project_id: "profitscout-lx6bb"
      - region: "us-central1"
      - price_updater_name: "refresh-prices"
      - fundamentals_name: "refresh-fundamentals"
      - technicals_name: "refresh-technicals"
      - sec_extractor_name: "extract-sec-filings"
      - transcript_collector_name: "refresh-transcripts"
      - transcript_summarizer_name: "create-transcript-summaries"

  - run_pipeline:
      parallel:
        shared: [project_id, region]
        branches:

        # ── Independent data-collection tasks ──
        - data_collection:
            steps:
            - call_price_updater:
                call: http.post
                args:
                  url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + price_updater_name}
                  auth:
                    type: OIDC        # ID token for Cloud Run/Functions :contentReference[oaicite:1]{index=1}
            - call_fundamentals:
                call: http.post
                args:
                  url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + fundamentals_name}
                  auth: {type: OIDC}
            - call_technicals:
                call: http.post
                args:
                  url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + technicals_name}
                  auth: {type: OIDC}
            - call_sec_extractor:
                call: http.post
                args:
                  url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + sec_extractor_name}
                  auth: {type: OIDC}

        # ── Sequential transcript pipeline ──
        - transcript_pipeline:
            steps:
            - call_transcript_collector:
                call: http.post
                args:
                  url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + transcript_collector_name}
                  auth: {type: OIDC}
                result: transcript_result       # holds collector response
            - call_transcript_summarizer:
                call: http.post
                args:
                  url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + transcript_summarizer_name}
                  auth: {type: OIDC}
                result: summarizer_result

  - done:
      return: "Pipeline finished successfully."
